{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","src","ava","to","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,IAAM,qBAAqB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCa/NC,EAVI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACjC,yBAAKC,IAAKP,EAAMQ,IAAKL,UAAWC,IAAEI,MAClC,kBAAC,IAAD,CAASC,GAAIR,GAAOD,EAAMU,QCAjBC,EANC,SAACX,GACf,OACE,yBAAKG,UAAWC,IAAEC,QAASL,EAAMY,U,yCCCjCC,EAAcC,YAAiB,IAiBpBC,cAAU,CAACC,KAAM,wBAAjBD,EAfQ,SAACf,GACtB,OACE,0BAAMiB,SAAUjB,EAAMkB,cACpB,6BACE,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAASV,GACpBH,KAAM,iBAAkBc,YAAa,qBAE9C,6BACE,6CCmBOC,EA5BC,SAACzB,GAEf,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EACFF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMR,GAAI6B,EAAE7B,GAAIM,IAAKuB,EAAEvB,SAChEwB,EACFN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAAStB,QAASsB,EAAEtB,QAASV,GAAIgC,EAAEhC,QAM7D,OAAKF,EAAMmC,OAGT,yBAAKhC,UAAWC,IAAEyB,SAChB,yBAAK1B,UAAWC,IAAEgC,cACfR,GAEH,yBAAKzB,UAAWC,IAAE6B,UAChB,iCAAOD,EAAP,KACA,kBAAC,EAAD,CAAgBf,SAdF,SAACoB,GACnBrC,EAAMsC,YAAYD,EAAOE,qBAID,kBAAC,IAAD,CAAU9B,GAAG,Y,wBCA1B+B,sBACbC,aAfsB,SAACf,GACvB,MAAO,CACLC,YAAaD,EAAMC,gBAII,SAACe,GAC1B,MAAO,CACLJ,YAAa,SAACC,GACZG,EAASC,YAAmBJ,SAOhCK,IAFaJ,CAGbf","file":"static/js/3.f4f0d2a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1HyKC\",\"ava\":\"Dialogs_ava__2s2jy\",\"dialogsItems\":\"Dialogs_dialogsItems__pkBi_\",\"dialog\":\"Dialogs_dialog__1HvFW\",\"active\":\"Dialogs_active__1zbn2\",\"messages\":\"Dialogs_messages__3Md5J\",\"message\":\"Dialogs_message__S8AsK\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom'; \r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id\r\n  return (\r\n    <div className={s.dialog + ' ' + s.active}>\r\n      <img src={props.ava} className={s.ava}/>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.dialog}>{props.message}</div>\r\n  );\r\n}\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\"\r\nimport React from \"react\"\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\"\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\"\r\n\r\n\r\nlet maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea}\r\n               validate={[required,maxLength50]}\r\n               name={'newMessageBody'} placeholder={'Enter a message'}/>\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {Redirect} from \"react-router-dom\"\r\nimport AddMessageForm from \"./AddMessageForm\"\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage\r\n\r\n  let dialogsElements =\r\n    state.dialogs.map(d => <DialogItem name={d.name} id={d.id} ava={d.ava}/>)\r\n  let messagesElements =\r\n    state.messages.map(m => <Message message={m.message} id={m.id}/>)\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  }\r\n\r\n\r\n  if (!props.isAuth) return <Redirect to='/login'/>\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div> {messagesElements} </div>\r\n        <AddMessageForm onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\"\r\nimport {compose} from \"redux\"\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}